---
title: "Meta Analysis Report for Bulk Data"
author: "Mahdi Eskandarian Boroujeni"
format:
  pdf:
    toc: true
    toc-depth: 2
    number-sections: true
    colorlinks: true
    documentclass: scrreprt
    papersize: letter
editor: visual
editor_options: 
  chunk_output_type: console

---

## Datasets & Workflow

-   Datasets including mouse macrophages and IFNg treatment:
    -   **STAT1:** GEO Accession Number: GSE84518, [Article](https://www.ncbi.nlm.nih.gov/pubmed/28288101)
    -   **PU1:** GEO Accession Number: GSE77886, [Article](https://www.ncbi.nlm.nih.gov/pubmed/27001747)
    -   **H3K27ac:** GEO Accession Number: GSE84520, [Article](https://www.ncbi.nlm.nih.gov/pubmed/28288101)
    -   **H3K4me1:** GEO Accession Number: GSE38377, [Article](https://www.ncbi.nlm.nih.gov/pubmed/23332752)
    -   **H3K4me3** GEO Accession Number: GSE38377, [Article](https://www.ncbi.nlm.nih.gov/pubmed/23332752)
    -   **ATAC-seq** GEO Accession Number: GSE115435, [Article](https://www.ncbi.nlm.nih.gov/pubmed/31266943)
    -   **RNA-seq** GEO Accession Number: GSE115435, [Article](https://www.ncbi.nlm.nih.gov/pubmed/31266943)
-   Workflows used for the Meta-analysis:
    -   **Chip-seq:** [ENCODE Transcription Factor and Histone ChIP-Seq processing pipeline](https://github.com/ENCODE-DCC/chip-seq-pipeline2)
    -   **ATAC-seq:** [ATAC-seq peak-calling and QC analysis pipeline](https://github.com/nf-core/atacseq)
    -   **RNA-seq:** [RNA sequencing analysis pipeline](https://github.com/nf-core/rnaseq)
-   Softwares used for downstream Analysis:
    -   [Homer](http://homer.ucsd.edu/homer/index.html)
    -   R packages
        -   Peak annotation: ChIPseeker_1.36.0
        -   Enrichment Analysis: clusterProfiler_4.8.2
        -   Chip-seq/ATAT-seq count table: Rsubread_1.22.2
        -   For the full list of R packages and the codes see *Report_Meta_Analysis_Bulk.qmd*

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

```{r echo=FALSE, include=FALSE, eval=TRUE, cache=TRUE}
# Set the working Directory
setwd("/shared_home/my_analysis/ChipSeeker")

# List of libraries
libraries <- c("DESeq2", "readr", "tibble", "dplyr", "stringr", 
               "GenomicRanges", "rafalib", "cowplot", "data.table", 
               "purrr", "tidyverse", "purrr", "PerformanceAnalytics", "ChIPseeker", 
               "clusterProfiler", "ComplexUpset", "TxDb.Mmusculus.UCSC.mm10.knownGene", 
               "org.Mm.eg.db", "ggcorrplot", "ggplot2", "enrichplot", "rtracklayer", "kableExtra", "knitr")

# Load each library separately
for (lib in libraries) {
  if (!require(lib, character.only = TRUE)) {
    install.packages(lib)
    library(lib, character.only = TRUE)
  }
}
```


## Comparing all the peaks at one glance
### Intro
-   **Steps to prepare the high-quality peaks:**
    -   The raw sequencing data for each dataset were analysed using relevant pipelines(Encode/NF-core)\
    -   Peak calling is then performed on all replicates, pooled data, self-pseudoreplicates of each bio-replicate and the pooled pseudoreplicates. The workflow supports calling of two general types of peaks: narrow and region.The MACS2 and SPP methods are used for peak calling. The MACS2 software has a mode for narrow peak calling and can be used for both tf and histone pipeline type, while SPP is preferably used for region peak calling when analysing transcription factor binding sites.
    -   As a way to assess concordance of peak calls between replicates, the IDR tool is used as the next step, along with Overlap, providing input peak files for the Reproducibility tool in order to obtain reproducibility QC. The basic idea is that if two replicates measure the same underlying biology, the most significant peaks, which are likely to be genuine signals, are expected to have high consistency between replicates, whereas peaks with low significance, which are more likely to be noise, are expected to have low consistency.
    
```{r echo=FALSE, fig.width=11, fig.height=9, cache=TRUE}
#### Importing & Peak Annotation & Enrichment & Plotting

file_p = "/shared_home/my_analysis/ChipSeeker"

TxDb_mm10 = TxDb.Mmusculus.UCSC.mm10.knownGene
org_mm10 = org.Mm.eg.db

# Reading Peak files
STAT1_UT_natoli = readPeakFile("/shared_home/my_analysis/ChipSeeker/STAT1_UT_natoli_idr.optimal_peak.regionPeak.bed", header=F)
STAT1_2hIFNg_natoli = readPeakFile("/shared_home/my_analysis/ChipSeeker/STAT1_2hIFNg_natoli_idr.optimal_peak.regionPeak.bed", header=F)

PU1_UT_langlais = readPeakFile(file.path(file_p,"PU1_UT_langlais_idr.optimal_peak.regionPeak.bed"), header=F)
PU1_IFNg_3h_langlais = readPeakFile(file.path(file_p,"PU1_IFNg_3h_langlais_idr.optimal_peak.regionPeak.bed"), header=F)

H3K27ac_UT_natoli = readPeakFile(file.path(file_p, "H3K27ac_UT_natoli_overlap.optimal_peak.narrowPeak.bed"), header=F)
H3K27ac_2hIFNg_natoli = readPeakFile(file.path(file_p, "H3K27ac_2hIFNg_natoli_overlap.optimal_peak.narrowPeak.bed"), header=F)

H3K4me1_UT_Barozzi = readPeakFile(file.path(file_p, "H3K4me1_UT_Barozzi_overlap.optimal_peak.narrowPeak.bed"), header=F)
H3K4me1_2hIFNg_Barozzi = readPeakFile(file.path(file_p, "H3K4me1_IFNg_2h_Barozzi_overlap.optimal_peak.narrowPeak.bed"), header=F)

H3K4me3_UT_Barozzi = readPeakFile(file.path(file_p, "H3K4me3_UT_Barozzi_overlap.optimal_peak.narrowPeak.bed"), header=F)
H3K4me3_4hIFNg_Barozzi = readPeakFile(file.path(file_p, "H3K4me3_IFNg_4h_Barozzi_overlap.optimal_peak.narrowPeak.bed"), header=F)

TREATMENT_90min_decker_ATAC = readPeakFile(file.path(file_p,"TREATMENT.mRp.clN_peaks.broadPeak.bed"), header=F)
CONTROL_UT_decker_ATAC = readPeakFile(file.path(file_p, "CONTROL.mRp.clN_peaks.broadPeak.bed"), header=F)


Epi_data_list = GRangesList(STAT1_UT_natoli=STAT1_UT_natoli, STAT1_2hIFNg_natoli=STAT1_2hIFNg_natoli, 
                            PU1_UT_langlais= PU1_UT_langlais, PU1_IFNg_3h_langlais=PU1_IFNg_3h_langlais, 
                            H3K27ac_UT_natoli = H3K27ac_UT_natoli, H3K27ac_2hIFNg_natoli= H3K27ac_2hIFNg_natoli,
                            H3K4me1_UT_Barozzi = H3K4me1_UT_Barozzi, H3K4me1_2hIFNg_Barozzi = H3K4me1_2hIFNg_Barozzi, 
                            H3K4me3_UT_Barozzi = H3K4me3_UT_Barozzi, H3K4me3_4hIFNg_Barozzi = H3K4me3_4hIFNg_Barozzi,
                            CONTROL_UT_decker_ATAC= CONTROL_UT_decker_ATAC, TREATMENT_90min_decker_ATAC = TREATMENT_90min_decker_ATAC)

# These files are in /shared_home/my_analysis/ChipSeeker
epi_files = list(ATAC_UT="CONTROL.mRp.clN_peaks.broadPeak.bed", ATAC_IFNg="TREATMENT.mRp.clN_peaks.broadPeak.bed",
                 STAT1_UT = "STAT1_UT_natoli_idr.optimal_peak.regionPeak.bed", STAT1_IFNg="STAT1_2hIFNg_natoli_idr.optimal_peak.regionPeak.bed",
                 PU1_UT = "PU1_UT_langlais_idr.optimal_peak.regionPeak.bed", PU1_IFNg =  "PU1_IFNg_3h_langlais_idr.optimal_peak.regionPeak.bed",
                H3K27ac_UT = "H3K27ac_UT_natoli_overlap.optimal_peak.narrowPeak.bed", H3K27ac_IFNg="H3K27ac_2hIFNg_natoli_overlap.optimal_peak.narrowPeak.bed",
            H3K4me1_UT =  "H3K4me1_UT_Barozzi_overlap.optimal_peak.narrowPeak.bed", H3K4me1_IFNg = "H3K4me1_IFNg_2h_Barozzi_overlap.optimal_peak.narrowPeak.bed",
            H3K4me3_UT = "H3K4me3_UT_Barozzi_overlap.optimal_peak.narrowPeak.bed" , H3K4me3_IFNg = "H3K4me3_IFNg_4h_Barozzi_overlap.optimal_peak.narrowPeak.bed")

# Annotate Peaks
#peakAnnoList = lapply(Epi_data_list, annotatePeak, TxDb = TxDb_mm10, annoDb="org.Mm.eg.db") 
#annoDb, which is optional and only use to convert entrez gene ID to gene symbol

#save
#saveRDS(peakAnnoList, file = "peakAnnolist.rds")
peakAnnoList=readRDS(file = "peakAnnolist.rds")

# Selecting peaks in promoter region
peakAnnoList_promo = lapply(peakAnnoList, function(gr) {
  df = as.data.frame(gr)
  df[grep("Promoter", df$annotation),]})

# FUNCTIONAL ENRICHMENT ANALYSIS
peakAnnoList_genes = lapply(peakAnnoList, function(i) as.data.frame(i)$geneId)

#peakAnnoList_genes_enrichGO = compareCluster(geneCluster = peakAnnoList_genes, fun = "enrichGO", pvalueCutoff = 0.05, ont="BP", OrgDb = "org.Mm.eg.db")

#saveRDS(peakAnnoList_genes_enrichGO, file = "peakAnnoList_genes_enrichGO.rds")

peakAnnoList_genes_enrichGO = readRDS(file = "peakAnnoList_genes_enrichGO.rds")

#peakAnnoList_genes_enrichKEGG = compareCluster(geneCluster = peakAnnoList_genes, fun = "enrichKEGG", pvalueCutoff = 0.05) # No enrichment
```

```{r echo=FALSE, fig.width=11, fig.height=9, cache=TRUE}
#Enrichment results visualization
dotplot(peakAnnoList_genes_enrichGO, title = "Comparing enrichment results of multiple peak list for Biological Process", font.size =9) + scale_x_discrete(guide = guide_axis(angle = 90))
```

## Annotation of all peaks

```{r echo=FALSE, fig.width=13, fig.height=11, cache=TRUE}
p1 = plotAnnoBar(peakAnnoList$CONTROL_UT_decker_ATAC, title = "")
p2 = plotAnnoBar(peakAnnoList$TREATMENT_90min_decker_ATAC, title = "") 
p3 = plotAnnoBar(peakAnnoList$H3K27ac_UT_natoli, title = "")
p4 = plotAnnoBar(peakAnnoList$H3K27ac_2hIFNg_natoli, title = "")
p5 = plotAnnoBar(peakAnnoList$STAT1_UT_natoli, title = "")
p6 = plotAnnoBar(peakAnnoList$STAT1_2hIFNg_natoli, title = "")
p7 = plotAnnoBar(peakAnnoList$PU1_UT_langlais, title = "")
p8 = plotAnnoBar(peakAnnoList$PU1_IFNg_3h_langlais, title = "")
p9 = plotAnnoBar(peakAnnoList$H3K4me1_UT_Barozzi, title = "")
p10 = plotAnnoBar(peakAnnoList$H3K4me1_2hIFNg_Barozzi, title = "")
p11 = plotAnnoBar(peakAnnoList$H3K4me3_UT_Barozzi, title = "")
p12 = plotAnnoBar(peakAnnoList$H3K4me3_4hIFNg_Barozzi, title = "")

#Plotting  

plot_grid(p1, p2, p3, p4, nrow = 2, labels = c("ATAC_UT", "ATAC_IFNg", "H3K27ac_UT", "H3K27ac_IFNg"), scale = 0.95)

plot_grid( p9, p10, p11, p12, nrow = 2, labels = c( "H3K4me1_UT", "H3K4me1_IFNg", "H3K4me3_UT", "H3K4me3_IFNg"), scale = 0.95)

plot_grid( p5, p6, p7, p8, nrow = 2, labels = c( "STAT1_UT", "STAT1_IFNg", "PU1_UT", "PU1_IFNg"), scale = 0.95)
```

## Correlation

### Intro

-   **Steps to prepare correlation plots:**
    -   All the bed files generated using respective piplines(Encode/Nf-core) were merged together.
    -   The peaks in merged file were counted in each dataset using featureCounts tool as described [here](https://github.com/crazyhottommy/ChIP-seq-analysis/blob/master/part2_Preparing-ChIP-seq-count-table.md).
    -   All the count table were merged into one for further analysis such as peak annotation, feature selection and correlation analysis.

```{r echo=FALSE, include=FALSE, cache=TRUE}
##FeatureCount tables
##Merge featureCount tables & renaming column names & Annotation & Selecting for Promoters

all_files<- list.files("/shared_home/my_analysis/ChipSeeker/count_table/All_epi_tf", pattern = "counts_subreadAll_*", full.names = T)

f_files <- all_files[!grepl("summary$", all_files)]

read_in_feature_counts<- function(file){
        cnt<- read_tsv(file, col_names =T, comment = "#")
        cnt<- cnt %>% dplyr::select(-Chr, -Start, -End, -Strand, -Length)
        return(cnt)
}
        
raw_counts<- map(f_files, read_in_feature_counts)
raw_counts_df<- purrr::reduce(raw_counts, inner_join)

featCount_all = raw_counts_df
featCount_all = dplyr::rename(featCount_all, "ATAC_UT" = "CONTROL.mRp.clN.sorted_reheader.bam" , "ATAC_IFNg" = "TREATMENT.mRp.clN.sorted_reheader.bam",
          "H3K27ac_UT" =  "H3K27ac_UT_natoli_reheader.bam", "H3K27ac_IFNg" = "H3K27ac_2hIFNg_reheader.bam",
          "H3K4me1_UT_1" = "H3K4me1_UT_1_reheader.bam", "H3K4me1_IFNg" = "H3K4me1_2hIFNg_reheader.bam", "H3K4me1_UT_2" = "H3K4me1_UT_2_reheader.bam", 
          "H3K4me3_UT_1" = "H3K4me3_UT_reheader.bam" , "H3K4me3_IFNg" = "H3K4me3_IFNg_4h_reheader.bam", "H3K4me3_UT_2" = "H3K4me3_UT_2_reheader.bam",                                          "PU1_UT" = "PU1_UT_langlais_reheader.bam", "PU1_IFNg" = "PU1_IFNg_3h_reheader.bam", 
                           "STAT1_UT" = "STAT1_UT_natoli_reheader.bam", "STAT1_IFNg" = "STAT1_2hIFNg_natoli_reheader.bam")


featCount_allBD = featCount_all %>% separate(Geneid, into = c("chr", "start", "end"), sep = "\\.", remove = F)
featCount_allBD$start = as.numeric(featCount_allBD$start)
featCount_allBD$end = as.numeric(featCount_allBD$end)

peaks_all = makeGRangesFromDataFrame(featCount_allBD, keep.extra.columns = T)

peaks_all_anno = annotatePeak(peaks_all, TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene, annoDb = "org.Mm.eg.db")
peaks_all_annoP = as.data.frame(peaks_all_anno)
peaks_all_anno_promo = peaks_all_annoP[str_detect(peaks_all_annoP$annotation, "Promoter"),]
```

### Correlation between biological replicates

```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE, warning=FALSE}
# Correlation 

# Checking correlation between replicates
C1 = ggplot(featCount_all) + geom_point(aes(x=log2(featCount_all$H3K4me1_UT_1 + 1), y=log2(featCount_all$H3K4me1_UT_2 + 1))) + geom_abline(intercept = 0, slope = 1, col = "red")

C2 = ggplot(featCount_all) + geom_point(aes(x=log2(featCount_all$H3K4me3_UT_1 + 1), y=log2(featCount_all$H3K4me3_UT_2 + 1))) + geom_abline(intercept = 0, slope = 1, col = "red")

plot_grid(C1, C2, ncol=2, labels = c("H3K4me1 replictes (untreated)", "H3K4me3 replicates (untrated)"), scale = 0.95)

```

### Correlation Plots

```{r echo=FALSE, include=TRUE, fig.width=18, fig.height=18, cache=TRUE}
# All regions
numeric_vars_all <- dplyr::select(featCount_all, 2:15)

cors_all <- cor(numeric_vars_all, use = "pairwise.complete.obs")
g1 = ggcorrplot(cors_all, hc.order = F, type = "upper",  outline.col = "white", show.legend = T, lab = T, title = "Correlation in All Genomic Regions") + theme(title = element_text(size=14))

### Correlation for the peaks in Promoter regions
# Only Promoters
numeric_vars_all_promo <- peaks_all_anno_promo %>% dplyr::select(grep("UT|IFNg", names(peaks_all_anno_promo)))

cors_allP <- cor(numeric_vars_all_promo, use = "pairwise.complete.obs")
g2 = ggcorrplot(cors_allP, hc.order = F, type = "upper",  outline.col = "white", show.legend = T, lab = T, title = "Correlation in Promoter regions") + theme(title = element_text(size=14))
plot_grid(g1, g2, nrow  = 2, scale = 0.95)
```

## Differntial Peaks

### Intro

-   **Steps to prepare the differential peaks:**
    -   The raw sequencing data for each dataset were analysed using relevant pipelines(Encode/NF-core)\
    -   To standardize all sequence alignments from differet datasets, "Tag Directory" was created using the Homer function [makeTagDirectory](http://homer.ucsd.edu/homer/ngs/tagDir.html)
    -   To find peaks that are differentially enriched between two conditions, the Homer function [getDifferentialPeaks](http://homer.ucsd.edu/homer/ngs/mergePeaks.html) were implemented. Next, these differential peaks were used for downstream analysis such peak annotation and KEGG enrichment analysis.

\newpage
### ATAC-seq

#### Differential Peak Annotation

**Fold change cutoff is 2**

```{r echo=FALSE, include=TRUE,  out.width='70%', out.height='70%', cache=TRUE, warning=FALSE, message=FALSE}
#Selecting top Differential Peaks & Performing GEO & Plotting
# Folder: "/shared_home/my_analysis/ChipSeeker"

### For ATAC, H3K4me1 & H3K4me3 fold enrichment over background tag count = 2. the remaining is 4

###ATAC

at_diff_FC2 = fread("getDifferentialPeaks/ATAC_DiffPeaks_FC2.tsv")

at_diff_b_FC2 = at_diff_FC2 %>% dplyr::select(chr, start, end)
at_diff_FC2_bed = makeGRangesFromDataFrame(at_diff_b_FC2)
at_diff_FC2_bed_anno = annotatePeak(at_diff_FC2_bed, TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene, annoDb = "org.Mm.eg.db")
plotAnnoPie(at_diff_FC2_bed_anno)

```

#### KEGG Enrichment Analysis

```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE, warning=FALSE, message=FALSE}
at_diff_FC2_bed_anno_genID = as.data.frame(at_diff_FC2_bed_anno)$geneId
at_diff_FC2_bed_anno_Kegg = enrichKEGG(at_diff_FC2_bed_anno_genID, organism = "mmu")
dotplot(at_diff_FC2_bed_anno_Kegg, showCategory=20)

```

\newpage

### H3K4me1

#### Differential Peak Annotation

**Fold change cutoff is 2**

```{r echo=FALSE, include=TRUE,  out.width='70%', out.height='70%', cache=TRUE, warning=FALSE, message=FALSE}
###H3K4me1

H3K4me1_diff_FC2 = fread("getDifferentialPeaks/H3K4me1_DiffPeaks_2_FC2.tsv")

H3K4me1_diff_b_FC2 = H3K4me1_diff_FC2 %>%dplyr::select(chr, start, end)
H3K4me1_diff_FC2_bed = makeGRangesFromDataFrame(H3K4me1_diff_b_FC2)
H3K4me1_diff_FC2_bed_anno = annotatePeak(H3K4me1_diff_FC2_bed, TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene, annoDb = "org.Mm.eg.db")
plotAnnoPie(H3K4me1_diff_FC2_bed_anno)
```

#### KEGG Enrichment Analysis

```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE, warning=FALSE, message=FALSE}

H3K4me1_diff_FC2_bed_anno_genID = as.data.frame(H3K4me1_diff_FC2_bed_anno)$geneId
H3K4me1_diff_FC2_bed_anno_Kegg = enrichKEGG(H3K4me1_diff_FC2_bed_anno_genID, organism = "mmu")
dotplot(H3K4me1_diff_FC2_bed_anno_Kegg, showCategory=20)
```

\newpage

### H3K4me3

#### Differential Peak Annotation

**Fold change cutoff is 2**

```{r echo=FALSE, include=TRUE,  out.width='70%', out.height='70%', cache=TRUE, warning=FALSE, message=FALSE}
###H3K4me3

H3K4me3_diff_FC2 = fread("getDifferentialPeaks/H3K4me3_DiffPeaks_1_FC2.tsv")

H3K4me3_diff_b_FC2 = H3K4me3_diff_FC2 %>%dplyr::select(chr, start, end)
H3K4me3_diff_FC2_bed = makeGRangesFromDataFrame(H3K4me3_diff_b_FC2)
H3K4me3_diff_FC2_bed_anno = annotatePeak(H3K4me3_diff_FC2_bed, TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene, annoDb = "org.Mm.eg.db")
plotAnnoPie(H3K4me3_diff_FC2_bed_anno)
```

#### KEGG Enrichment Analysis

```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}

H3K4me3_diff_FC2_bed_anno_genID = as.data.frame(H3K4me3_diff_FC2_bed_anno)$geneId
H3K4me3_diff_FC2_bed_anno_Kegg = enrichKEGG(H3K4me3_diff_FC2_bed_anno_genID, organism = "mmu")
dotplot(H3K4me3_diff_FC2_bed_anno_Kegg, showCategory=20)
```

\newpage

### H3K27ac

#### Differential Peak Annotation

**Fold change cutoff is 4**

```{r echo=FALSE, include=TRUE,  out.width='70%', out.height='70%', cache=TRUE}

h3_diff = fread("getDifferentialPeaks/H3K27ac_DiffPeaks.tsv")

h3_diff_b = h3_diff %>%dplyr::select(chr, start, end)
h3_diff_bed = makeGRangesFromDataFrame(h3_diff_b)
h3_diff_bed_anno = annotatePeak(h3_diff_bed, TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene, annoDb = "org.Mm.eg.db")
plotAnnoPie(h3_diff_bed_anno)
```

#### KEGG Enrichment Analysis

```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}

h3_diff_bed_anno_genID = as.data.frame(h3_diff_bed_anno)$geneId
h3_diff_bed_anno_Kegg = enrichKEGG(h3_diff_bed_anno_genID, organism = "mmu") #KEGG
dotplot(h3_diff_bed_anno_Kegg, showCategory=20)

```

\newpage

### STAT1

#### Differential Peak Annotation

**Fold change cutoff is 4**

```{r echo=FALSE, include=TRUE,  out.width='70%', out.height='70%', cache=TRUE}
###STAT1
st_diff = fread("getDifferentialPeaks/STAT1_DiffPeaks.tsv")

st_diff_b = st_diff %>% dplyr::select(chr, start, end)
st_diff_bed = makeGRangesFromDataFrame(st_diff_b)
st_diff_bed_anno = annotatePeak(st_diff_bed, TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene, annoDb = "org.Mm.eg.db")
plotAnnoPie(st_diff_bed_anno)
```

#### KEGG Enrichment Analysis

```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}

st_diff_bed_anno_genID = as.data.frame(st_diff_bed_anno)$geneId

#KEGG
st_diff_bed_anno_Kegg = enrichKEGG(st_diff_bed_anno_genID, organism = "mmu")
dotplot(st_diff_bed_anno_Kegg, showCategory=20) 
```
\newpage

### PU1

#### Differential Peak Annotation

**Fold change cutoff is 4**

```{r echo=FALSE, include=TRUE,  out.width='70%', out.height='70%', cache=TRUE}

###PU1
pu_diff = fread("getDifferentialPeaks/PU1_DiffPeaks.tsv")

pu_diff_b = pu_diff %>% dplyr::select(chr, start, end)
pu_diff_bed = makeGRangesFromDataFrame(pu_diff_b)
pu_diff_bed_anno = annotatePeak(pu_diff_bed, TxDb = TxDb.Mmusculus.UCSC.mm10.knownGene, annoDb = "org.Mm.eg.db")
plotAnnoPie(pu_diff_bed_anno)
```

#### KEGG Enrichment Analysis

**No KEGG enrichment for PU1 differential peaks**

```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}

pu_diff_bed_anno_genID = as.data.frame(pu_diff_bed_anno)$geneId

#KEGG
#pu_diff_bed_anno_Kegg = enrichKEGG(pu_diff_bed_anno_genID, organism = "mmu") # NO enrichment
#dotplot(pu_diff_bed_anno_Kegg, showCategory=20)
```
\newpage

### Summary of Differential Peaks in each Dataset

```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}
# Num_Differential_Peaks
diff_peaks_list = list(at_diff_FC2_bed_anno, H3K4me1_diff_FC2_bed_anno, H3K4me3_diff_FC2_bed_anno, h3_diff_bed_anno,
                       st_diff_bed_anno, pu_diff_bed_anno)
#Print
#lapply(diff_peaks_list, function(x) {
#  df = as.data.frame(x)
#  dim(df)[1]
#})

#Num_Unique_GeneIDs
diff_genID_list = list(at_diff_FC2_bed_anno_genID, H3K4me1_diff_FC2_bed_anno_genID, H3K4me3_diff_FC2_bed_anno_genID, h3_diff_bed_anno_genID, st_diff_bed_anno_genID, pu_diff_bed_anno_genID)
#Print
#lapply(diff_genID_list, function(x) length(unique(x)))

### Plotting
# Creating dataframe
diff_stats = data.frame(Markers = c("ATAC-seq", "H3K4me1", "H3K4me3", "H3K27ac", "STAT1", "PU1"),
                        Num_Differential_Peaks = c(7326, 8803, 4021, 9450, 6578, 258),
                        Num_Unique_GeneIDs = c(4102, 6164, 2839, 4166, 3698, 266))

# Reshape the data
diff_stats_long <- reshape2::melt(diff_stats, id.vars = "Markers")

# Create the plot
ggplot(diff_stats_long, aes(x = Markers, y = value, fill = variable)) +
  geom_bar(stat = "identity", position = "dodge") +
  geom_text(aes(label = value), position = position_dodge(width = 0.9), hjust = -0.1) +
  coord_flip() +
  labs(x = "Markers", y = "Count", fill = "", title = "Number of Differential Peaks and related Gene IDs") +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 16), plot.title = element_text(size = 20))
```
\newpage

### Enrichment analysis for overlapping differential peaks
#### KEGG Analysis
```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}
###Overlapping genes
overlap_FC_peaks = Reduce(intersect, list(as.data.frame(peakAnnoList$PU1_UT_langlais)$geneId, 
                          H3K4me1_diff_FC2_bed_anno_genID, h3_diff_bed_anno_genID, at_diff_FC2_bed_anno_genID,
                          st_diff_bed_anno_genID, H3K4me3_diff_FC2_bed_anno_genID ))

overlap_FC_peaks_Kegg = enrichKEGG(overlap_FC_peaks, organism = "mmu") # kegg
dotplot(overlap_FC_peaks_Kegg, showCategory=20)
```
#### Biological Process Analysis 
```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}
overlap_FC_peaks_BP = enrichGO(overlap_FC_peaks, OrgDb = "org.Mm.eg.db", ont = "BP") # BP
dotplot(overlap_FC_peaks_BP, showCategory=20)
```
\newpage
## Merging Differential Peaks with RNA-seq dataset
### Overlapping genes between Chip-seq, ATAC-seq & RNA-seq
```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}
# Differential Peaks
# Overlapping genes: Finding their peaks located in Promoter using fold change data
diff_peaks_list = list(at_diff_FC2_bed_anno=at_diff_FC2_bed_anno, H3K4me1_diff_FC2_bed_anno=H3K4me1_diff_FC2_bed_anno, 
                       H3K4me3_diff_FC2_bed_anno=H3K4me3_diff_FC2_bed_anno, h3_diff_bed_anno=h3_diff_bed_anno,
                       st_diff_bed_anno=st_diff_bed_anno, pu_UT_anno = peakAnnoList$PU1_UT_langlais)
diff_peaks_list_promo = lapply(diff_peaks_list, function(gr) {
  df = as.data.frame(gr)
  df[grep("Promoter", df$annotation),]})

diff_peaks_list_promo_ovlpGenes = lapply(diff_peaks_list_promo, function(x) {
  x[x$geneId %in% overlap_FC_peaks, c("seqnames", "start", "end")]
})

#Merging all into one dataframe
ovlp_peaks_promo = do.call(rbind, diff_peaks_list_promo_ovlpGenes)

# RNA-seq data sets
#### DEG of salmon.merged.gene_counts_length_scaled.tsv 

## Use bias corrected counts without an offset. load and use salmon.merged.gene_counts_length_scaled.tsv
#countsFromAbundance="lengthScaledTPM


genl_sc = read_tsv("/shared_home/my_analysis/RNA/salmon.merged.gene_counts_length_scaled.tsv")

# Preparing colDtaa
sample = colnames(genl_sc)[-c(1:2)]
condition = factor(rep(c("Cont", "IFNg"), each=3))
genl_sc_df = tibble(sample = sample, condition = condition)
genl_sc_df = as.data.frame(genl_sc_df)

# Preparing countData
counts_ifn = dplyr::select(genl_sc, colnames(genl_sc)[-c(2)])
counts_ifn = as.data.frame(counts_ifn)
rownames(counts_ifn) = counts_ifn$gene_id
counts_ifn = counts_ifn[,-c(1)]

# if these counts have not been normalized and are not integers for another reason, then rounding would make perfect sense.
ddsmat = DESeqDataSetFromMatrix(countData = round(counts_ifn), colData = genl_sc_df, design = ~ condition)
ddsmat = DESeq(ddsmat)
res = results(ddsmat, name = "condition_IFNg_vs_Cont", alpha = 0.05)
res$gene = rownames(res)
res = na.omit(res, cols = c("pvalue", "padj"))

#res[order(res$log2FoldChange, decreasing = T),] %>% head(10)

# ordering the rows
#as.data.frame(res) %>% arrange(desc(log2FoldChange), desc(baseMean)) %>% head(10)

# Check the columns
#columns(org.Mm.eg.db)

overlap_FC_genes = data.frame(IDs = overlap_FC_peaks)
overlap_FC_genes$symbol = mapIds(org.Mm.eg.db, keys = overlap_FC_genes$IDs, keytype = "ENTREZID", column = "SYMBOL", multiVals = "first")
overlap_FC_genes$geneName = mapIds(org.Mm.eg.db, keys = overlap_FC_genes$IDs, keytype = "ENTREZID", column = "GENENAME", multiVals = "first")

# Merging Peaks & RNA-seq
overlap_FC_genes_rna = inner_join(as.data.frame(res), overlap_FC_genes, join_by("gene"=="symbol"))
print(paste("The size of table is: ", dim(overlap_FC_genes_rna)[1]))

#Prepare the table
overlap_FC_genes_rna %>% arrange(desc(log2FoldChange), desc(baseMean)) %>% dplyr::select(c("gene",                                                            "baseMean", "log2FoldChange", "padj", "geneName")) %>% kable(format = "latex", booktabs=TRUE, longtable=TRUE,caption = "Full overlapping gene list. The genes are sorted based on log2FoldChange taken from RNA-seq data.") %>% 
  kable_classic(full_width=F, font_size=6)

```
\newpage
### Top 10 Overlapping genes in IGV
```{r echo=FALSE, include=TRUE, out.width='110%', out.height='230%', cache=TRUE}
# Include an external image
include_graphics("/shared_home/my_analysis/IGV_files/Top10_overlap_genes.png")
```
\newpage
### KEGG Enrichment Analysis for Overlapping genes (342 genes)
```{r echo=FALSE, include=TRUE, fig.width=13, fig.height=11, cache=TRUE}
overlap_FC_genes_rna_KEGG = enrichKEGG(overlap_FC_genes_rna$IDs, organism = "mmu")
dotplot(overlap_FC_genes_rna_KEGG, showCategory=20)
```

\newpage
## Finding Instances of Motifs near the binding Sites at Promoter

### Intro

-   **Steps taken to quantify motif instances**
    -   The raw sequencing data for each dataset were analysed using relevant pipelines(Encode/NF-core)\
    -   The STAT1 and PU1 peaks, generated by a peak caller, were used to select those peaks that were in the immediate vicinity of *Promoter* region(-3000,3000).
    -   The instances of GAS, ISRE & PU1 motifs in the promoter regions of STAT1 and PU1 binding sites were scanned and quantified using [annotatePeaks.pl](http://homer.ucsd.edu/homer/ngs/quantification.html).
    -   The PU1 motifs were selected from [Homer Motif library](http://homer.ucsd.edu/homer/custom.motifs).
    -   The GAS & ISRE motifs were taken from this [paper](https://pubmed.ncbi.nlm.nih.gov/37347298/).
    -   For the overlapping gene list, only peaks located in the promoter region were selected.
    -   For PU1 and STAT1, peaks in the IFNg-treated group were shown.

### Intances of GAS, ISRE and PU1 motifs near the binding sites at promoter
```{r echo=FALSE, include=TRUE, fig.width=10, fig.height=10, cache=TRUE}
#/shared_home/my_analysis/homer/bin/annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif > PU1_IFNg_Promoter_vs_motifs_PU1_GAS_ISRE.txt

puMot = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/PU1_IFNg_Promoter_vs_motifs_PU1_GAS_ISRE.txt")

m1 = ggplot() +
  geom_line(data = puMot, aes(x = puMot$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`,y = puMot$`PU.1:IRF8(ETS:IRF)/pDC-Irf8-ChIP-Seq(GSE66899)/Homer,BestGuess:PU.1:IRF8(ETS:IRF)/pDC-Irf8-ChIP-Seq(GSE66899)/Homer(1.000) total sites` ,  color = "PU1" )) +
  geom_line(data = puMot, aes(x = puMot$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`, y = puMot$`ISRE_IRF3 total sites`, color = "ISRE")) +
    geom_line(data = puMot, aes(x = puMot$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`, y = puMot$`GAS_Stat3_il21 total sites`, color = "GAS")) +
  labs(
    x = "Distance from PU1 peak",
    y = "Motifs (per bp per Peak)",
    title = "GAS, ISRE and PU1 motif Distribution near PU1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red", "green")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### STAT1
#/shared_home/my_analysis/homer/bin/annotatePeaks.pl ST1_IFNg_Peaks_in_Promoters.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif > ST1_IFNg_Promoter_vs_motifs_PU1_GAS_ISRE.txt

stMot = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/ST1_IFNg_Promoter_vs_motifs_PU1_GAS_ISRE.txt")

m2 = ggplot() +
  geom_line(data = stMot, aes(x = stMot$`Distance from Center (cmd=annotatePeaks.pl ST1_IFNg_Peaks_in_Promoters.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`,y = stMot$`PU.1:IRF8(ETS:IRF)/pDC-Irf8-ChIP-Seq(GSE66899)/Homer,BestGuess:PU.1:IRF8(ETS:IRF)/pDC-Irf8-ChIP-Seq(GSE66899)/Homer(1.000) total sites`,  color = "PU1" )) +
  geom_line(data = stMot, aes(x = stMot$`Distance from Center (cmd=annotatePeaks.pl ST1_IFNg_Peaks_in_Promoters.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`, y = stMot$`ISRE_IRF3 total sites`, color = "ISRE")) +
    geom_line(data = stMot, aes(x = stMot$`Distance from Center (cmd=annotatePeaks.pl ST1_IFNg_Peaks_in_Promoters.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`, y = stMot$`GAS_Stat3_il21 total sites`, color = "GAS")) +
  labs(
    x = "Distance from STAT1 peak",
    y = "Motifs (per bp per Peak)",
    title = "GAS, ISRE and PU1 motif Distribution near STAT1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red", "green")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### Overlapping genes between Chip-seq, ATAC-seq & RNA-seq
# In bash: /shared_home/my_analysis/homer/bin/annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif > overlp_peaks_promos_vs_motifs_PU1_GAS_ISRE.txt

ovlpMot = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/overlp_peaks_promos_vs_motifs_PU1_GAS_ISRE.txt")

m3 = ggplot() +
   geom_line(data = ovlpMot, aes(x = ovlpMot$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`,y = ovlpMot$`PU.1(ETS)/ThioMac-PU.1-ChIP-Seq(GSE21512)/Homer,BestGuess:PU.1(ETS)/ThioMac-PU.1-ChIP-Seq(GSE21512)/Homer(1.000) total sites` ,  color = "PU1" )) +
   geom_line(data = ovlpMot, aes(x = ovlpMot$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`, y = ovlpMot$`ISRE_IRF8 total sites`, color = "ISRE")) +
   geom_line(data = ovlpMot, aes(x = ovlpMot$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 1000 -hist 5 -m PU1.motif GAS_ISRE.motif)`, y = ovlpMot$`GAS_Stat3_il21 total sites`, color = "GAS")) +
  labs(
    x = "Distance from peaks of overlapping genes",
    y = "Motifs (per bp per Peak)",
    title = "GAS, ISRE and PU1 motif Distribution near Promoter of overlapping genes",
    color="") +
   scale_color_manual(values=c("blue", "red", "green")) + theme(title = element_text(size = 14)) +
  theme_minimal()
plot_grid(m1, m2, m3, nrow = 3, align = "v", scale = 0.85)
```
\newpage
## Distribution of Epigenetic markers near the binding sites at the Promoter

### Intro

-   **Steps taken to quantify the distribution of epigenetic markers**
    -   The raw sequencing data for each dataset were analysed using relevant pipelines(Encode/NF-core)\
    -   The STAT1 and PU1 peaks, generated by a peak caller, were used to select those peaks that were in the immediate vicinity of *Promoter* region(-3000,3000).
    -   The distribution of H3K4me1, H3K4me3 and H3K27ac in the promoter region were quantified using [annotatePeaks.pl](http://homer.ucsd.edu/homer/ngs/quantification.html).
    -   For the overlapping gene list, only peaks located in the promoter region were selected.
    -   For PU1 and STAT1, peaks in the IFNg-treated group were shown.

### Epigenetic Markers Distribution near STAT1 binding sites
```{r echo=FALSE, include=TRUE, fig.width=10, fig.height=10, cache=TRUE}
#STAT1 vs H3K4me1
#/shared_home/my_analysis/homer/bin/annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/ > STAT1_promoter_vs_H3K4me1_2hIFNg_UT_2.txt

st_me1 = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/STAT1_promoter_vs_H3K4me1_2hIFNg_UT_2.txt")

s1 = ggplot() +
  geom_line(data = st_me1, aes(x = st_me1$`Distance from Center (cmd=annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/)`, y = st_me1$`H3K4me1_UT_2_tag/ Coverage`, color = "H3K4me3_UT_tag/ Coverage" )) +
  geom_line(data = st_me1, aes(x = st_me1$`Distance from Center (cmd=annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/)`, y = st_me1$`H3K4me1_2hIFNg_tag/ Coverage`, color = "H3K4me3_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from STAT1 peak (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K4me1 Distribution near STAT1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### H3K4me3 Distribution near STAT1 binding sites    
# In bash: /shared_home/my_analysis/homer/bin/annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/ > STAT1_promoter_vs_H3K4me3_4hIFNg_UT_2.txt

st_me3 = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/STAT1_promoter_vs_H3K4me3_4hIFNg_UT_2.txt")

s2 = ggplot() +
  geom_line(data = st_me3, aes(x = st_me3$`Distance from Center (cmd=annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/)`, y = st_me3$`H3K4me3_UT_2_tag/ Coverage`, color = "H3K4me3_UT_tag/ Coverage" )) +
  geom_line(data = st_me3, aes(x = st_me3$`Distance from Center (cmd=annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/)`, y = st_me3$`H3K4me3_4hIFNg_tag/ Coverage`, color = "H3K4me3_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from STAT1 peak (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K4me3 Distribution near STAT1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### H3K27ac Distribution near STAT1 binding sites    
#/shared_home/my_analysis/homer/bin/annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/ > STAT1_promoter_vs_H3K27ac_2hIFNg_UT.txt

st_ac = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/STAT1_promoter_vs_H3K27ac_2hIFNg_UT.txt")

s3 = ggplot() +
  geom_line(data = st_ac, aes(x = st_ac$`Distance from Center (cmd=annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/)`, y = st_ac$`H3K27ac_UT_natoli_tag/ Coverage`, color = "H3K27ac_UT_tag/ Coverage" )) +
  geom_line(data = st_ac, aes(x = st_ac$`Distance from Center (cmd=annotatePeaks.pl STAT1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/)`, y = st_ac$`H3K27ac_2hIFNg_natoli_tag/ Coverage`, color = "H3K27ac_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from STAT1 peak (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K27ac Distribution near STAT1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()
plot_grid(s1, s2, s3, nrow = 3, align = "v", scale = 0.85)
```

### Epigenetic Markers Distribution near PU1 binding sites
```{r echo=FALSE, include=TRUE, fig.width=10, fig.height=10, cache=TRUE}
######################PU1 vs H3K4me1  
# /shared_home/my_analysis/homer/bin/annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/ > PU1_promoter_vs_H3K4me1_2hIFNg_UT_2.txt

pu_me1 = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/PU1_promoter_vs_H3K4me1_2hIFNg_UT_2.txt")

u1 = ggplot() +
  geom_line(data = pu_me1, aes(x = pu_me1$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/)`, y = pu_me1$`H3K4me1_UT_2_tag/ Coverage`, color = "H3K4me1_UT_tag/ Coverage" )) +
  geom_line(data = pu_me1, aes(x = pu_me1$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/)`, y = pu_me1$`H3K4me1_2hIFNg_tag/ Coverage`, color = "H3K4me1_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from PU1 peak (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K4me1 Distribution near PU1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### H3K4me3 Distribution near PU1 binding sites    
#/shared_home/my_analysis/homer/bin/annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/ > PU1_promoter_vs_H3K4me3_4hIFNg_UT_2.txt

pu_me3 = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/PU1_promoter_vs_H3K4me3_4hIFNg_UT_2.txt")

u2 = ggplot() +
  geom_line(data = pu_me3, aes(x = pu_me3$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/)`, y = pu_me3$`H3K4me3_UT_2_tag/ Coverage`, color = "H3K4me3_UT_tag/ Coverage" )) +
  geom_line(data = pu_me3, aes(x = pu_me3$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/)`, y = pu_me3$`H3K4me3_4hIFNg_tag/ Coverage`, color = "H3K4me3_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from PU1 peak (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K4me3 Distribution near PU1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### H3K27ac Distribution near PU1 binding sites    
#/shared_home/my_analysis/homer/bin/annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/ > PU1_promoter_vs_H3K27ac_2hIFNg_UT.txt

pu_ac = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/PU1_promoter_vs_H3K27ac_2hIFNg_UT.txt")

u3 = ggplot() +
  geom_line(data = pu_ac, aes(x = pu_ac$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/)`, y = pu_ac$`H3K27ac_UT_natoli_tag/ Coverage`, color = "H3K27ac_UT_tag/ Coverage" )) +
  geom_line(data = pu_ac, aes(x = pu_ac$`Distance from Center (cmd=annotatePeaks.pl PU1_IFNg_Peaks_in_Promoters.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/)`, y = pu_ac$`H3K27ac_2hIFNg_natoli_tag/ Coverage`, color = "H3K27ac_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from PU1 peak (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K27ac Distribution near PU1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()
plot_grid(u1, u2, u3, nrow = 3, align = "v", scale = 0.85)
```

### Epigenetic Markers Distribution near the promoter regions of overlapping genes    
```{r echo=FALSE, include=TRUE, fig.width=10, fig.height=10, cache=TRUE}
# Overlapping genes vs H3K4me1
# In bash: /shared_home/my_analysis/homer/bin/annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/ > OVERLAP_promoter_vs_H3K4me1_2hIFNg_UT_2.txt

ov_me1 = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/OVERLAP_promoter_vs_H3K4me1_2hIFNg_UT_2.txt")

n1 = ggplot() +
  geom_line(data = ov_me1, aes(x = ov_me1$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/)`, y = ov_me1$`H3K4me1_UT_2_tag/ Coverage`, color = "H3K4me1_UT_tag/ Coverage" )) +
  geom_line(data = ov_me1, aes(x = ov_me1$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K4me1_UT_2_tag/ H3K4me1_2hIFNg_tag/)`, y = ov_me1$`H3K4me1_2hIFNg_tag/ Coverage`, color = "H3K4me1_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from overlapping peaks (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K4me1 Distribution near overlapping genes",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### H3K4me3 Distribution near the promoter regions of overlapping genes    
# Overlapping genes vs H3K4me3
# In bash: /shared_home/my_analysis/homer/bin/annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/ > OVERLAP_promoter_vs_H3K4me3_4hIFNg_UT_2.txt

ov_me3 = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/OVERLAP_promoter_vs_H3K4me3_4hIFNg_UT_2.txt")

n2 = ggplot() +
  geom_line(data = ov_me3, aes(x = ov_me3$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/)`, y = ov_me3$`H3K4me3_UT_2_tag/ Coverage`, color = "H3K4me3_UT_tag/ Coverage" )) +
  geom_line(data = ov_me3, aes(x = ov_me3$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K4me3_UT_2_tag/ H3K4me3_4hIFNg_tag/)`, y = ov_me3$`H3K4me3_4hIFNg_tag/ Coverage`, color = "H3K4me3_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from overlapping peaks (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K4me3 Distribution near overlapping genes",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### H3K27ac Distribution near the promoter regions of overlapping genes    
# Overlapping genes vs H3K27ac
# In bash: /shared_home/my_analysis/homer/bin/annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/ > OVERLAP_promoter_vs_H3K27ac_2hIFNg_UT.txt

ov_ac = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/OVERLAP_promoter_vs_H3K27ac_2hIFNg_UT.txt")

n3 = ggplot() +
  geom_line(data = ov_ac, aes(x = ov_ac$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/)`, y = ov_ac$`H3K27ac_UT_natoli_tag/ Coverage`, color = "H3K27ac_UT_tag/ Coverage" )) +
  geom_line(data = ov_ac, aes(x = ov_ac$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d H3K27ac_UT_natoli_tag/ H3K27ac_2hIFNg_natoli_tag/)`, y = ov_ac$`H3K27ac_2hIFNg_natoli_tag/ Coverage`, color = "H3K27ac_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from overlapping peaks (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K27ac Distribution near overlapping genes",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()
plot_grid(n1, n2, n3, nrow = 3, align = "v", scale = 0.85)
```
\newpage
## The Binding Site Profile of STAT1 and PU1 near the Promoter of overlapping genes

### Intro

-   **Steps taken to quantify the binding site profile of STAT1 and PU1**
    -   The raw sequencing data for each dataset were analysed using relevant pipelines(Encode/NF-core)\
    -   The binding profile of STAT1 and PU1 in the promoter region were quantified using [annotatePeaks.pl](http://homer.ucsd.edu/homer/ngs/quantification.html).
    -   For the overlapping gene list, only peaks located in the promoter region were selected.
    
### The Binding Site Profile near the Promoter of overlapping genes     
```{r echo=FALSE, include=TRUE, fig.width=10, fig.height=10, cache=TRUE}
# STAT1 Binding Profile
# In bash: /shared_home/my_analysis/homer/bin/annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d STAT1_UT_natoli_tag/ STAT1_2hIFNg_natoli_tag/ > OVERLAP_promoter_vs_STAT1_2hIFNg_UT.txt
ov_st = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/OVERLAP_promoter_vs_STAT1_2hIFNg_UT.txt")

m1 = ggplot() +
  geom_line(data = ov_st, aes(x = ov_st$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d STAT1_UT_natoli_tag/ STAT1_2hIFNg_natoli_tag/)`, y = ov_st$`STAT1_UT_natoli_tag/ Coverage`, color = "STAT1_UT_tag/ Coverage" )) +
  geom_line(data = ov_st, aes(x = ov_st$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d STAT1_UT_natoli_tag/ STAT1_2hIFNg_natoli_tag/)`, y = ov_st$`STAT1_2hIFNg_natoli_tag/ Coverage`, color = "STAT1_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from overlapping peaks (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "STAT1 Distribution near the promoter of overlapping genes",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### PU1 Binding Profile     
ov_pu = fread("/shared_home/my_analysis/ChipSeeker/getDifferentialPeaks/OVERLAP_promoter_vs_PU1_3hIFNg_UT.txt")

m2 = ggplot() +
  geom_line(data = ov_pu, aes(x = ov_pu$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d PU1_UT_langlais_tag/ PU1_IFNg_3h_tag/)`, y = ov_pu$`PU1_UT_langlais_tag/ Coverage`, color = "PU1_UT_tag/ Coverage" )) +
  geom_line(data = ov_pu, aes(x = ov_pu$`Distance from Center (cmd=annotatePeaks.pl overlp_peaks_promos.bed mm10 -size 4000 -hist 10 -d PU1_UT_langlais_tag/ PU1_IFNg_3h_tag/)`, y = ov_pu$`PU1_IFNg_3h_tag/ Coverage`, color = "PU1_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from overlapping peaks (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "PU1 Distribution near the promoter of overlapping genes",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()
plot_grid(m1, m2, nrow  = 2, scale = 0.85)
```
\newpage
## Distribution of Epigenetic markers near the Co-Bound Peaks (STAT1-PU1) at the Promoter

### Intro

-   **Steps taken to quantify the distribution of epigenetic markers**
    -   The raw sequencing data for each dataset were analysed using relevant pipelines(Encode/NF-core)\
    -   The STAT1 and PU1 peaks, generated by a peak caller, were used to select those peaks that were in the immediate vicinity of *Promoter* region(-3000,3000).
    -   To find the co-bound peaks between STAT1 and PU1 (overlapping bound peaks), [mergePeaks](http://homer.ucsd.edu/homer/ngs/mergePeaks.html) was implemented. 
    -   The distribution of H3K4me1, H3K4me3 and H3K27ac in the co-bound peaks were quantified using [annotatePeaks.pl](http://homer.ucsd.edu/homer/ngs/quantification.html).
    -   For PU1 and STAT1, peaks in the IFNg-treated group were selected.

### Epigenetic Markers near the promoter regions of Co-Bound Peaks (STAT1-PU1)
```{r echo=FALSE, include=TRUE, fig.width=10, fig.height=10, cache=TRUE}
### H3K4me1 Distribution near the promoter regions of Co-Bound Peaks (STAT1-PU1)
#In bash: /shared_home/my_analysis/homer/bin/annotatePeaks.pl coBound_STAT1_PU1_IFNg_promoters.bed mm10 -size 4000 -hist 10 -d ../../getDifferentialPeaks/H3K4me1_UT_2_tag/ ../../getDifferentialPeaks/H3K4me1_2hIFNg_tag/ > coBound_STAT1_PU1_promoter_vs_H3K4me1_2hIFNg_UT_2.txt

st_pu_me1 = fread("/shared_home/my_analysis/ChipSeeker/consensus_peaks/coBound_STAT1_PU1/coBound_STAT1_PU1_promoter_vs_H3K4me1_2hIFNg_UT_2.txt")

d1 = ggplot() +
  geom_line(data = st_pu_me1, aes(x = st_pu_me1$`Distance from Center (cmd=annotatePeaks.pl coBound_STAT1_PU1_IFNg_promoters.bed mm10 -size 4000 -hist 10 -d ../../getDifferentialPeaks/H3K4me1_UT_2_tag/ ../../getDifferentialPeaks/H3K4me1_2hIFNg_tag/)`, y = st_pu_me1$`../../getDifferentialPeaks/H3K4me1_UT_2_tag/ Coverage`, color = "H3K4me1_UT_tag/ Coverage" )) +
  geom_line(data = st_pu_me1, aes(x = st_pu_me1$`Distance from Center (cmd=annotatePeaks.pl coBound_STAT1_PU1_IFNg_promoters.bed mm10 -size 4000 -hist 10 -d ../../getDifferentialPeaks/H3K4me1_UT_2_tag/ ../../getDifferentialPeaks/H3K4me1_2hIFNg_tag/)`, y = st_pu_me1$`../../getDifferentialPeaks/H3K4me1_2hIFNg_tag/ Coverage`, color = "H3K4me1_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from coBound STAT1-PU1 peaks (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K4me1 Distribution near coBound STAT1-PU1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

### H3K4me3 Distribution near the promoter regions of Co-Bound Peaks (STAT1-PU1)
#In bash: /shared_home/my_analysis/homer/bin/mergePeaks STAT1_IFNg_Peaks_in_Promoters.bed PU1_IFNg_Peaks_in_Promoters.bed -cobound 1
          #cat coBoundBy1.txt | cut -f2-4 > coBound_STAT1_PU1_IFNg_promoters.bed
#In bash: /shared_home/my_analysis/homer/bin/annotatePeaks.pl coBound_STAT1_PU1_IFNg_promoters.bed mm10 -size 4000 -hist 10 -d ../../getDifferentialPeaks/H3K4me3_UT_2_tag/ ../../getDifferentialPeaks/H3K4me3_4hIFNg_tag/ > coBound_STAT1_PU1_promoter_vs_H3K4me3_4hIFNg_UT_2.txt

st_pu_me3 = fread("/shared_home/my_analysis/ChipSeeker/consensus_peaks/coBound_STAT1_PU1/coBound_STAT1_PU1_promoter_vs_H3K4me3_4hIFNg_UT_2.txt")

d2 = ggplot() +
  geom_line(data = st_pu_me3, aes(x = st_pu_me3$`Distance from Center (cmd=annotatePeaks.pl coBound_STAT1_PU1_IFNg_promoters.bed mm10 -size 4000 -hist 10 -d ../../getDifferentialPeaks/H3K4me3_UT_2_tag/ ../../getDifferentialPeaks/H3K4me3_4hIFNg_tag/)`, y = st_pu_me3$`../../getDifferentialPeaks/H3K4me3_UT_2_tag/ Coverage`, color = "H3K4me3_UT_tag/ Coverage" )) +
  geom_line(data = st_pu_me3, aes(x = st_pu_me3$`Distance from Center (cmd=annotatePeaks.pl coBound_STAT1_PU1_IFNg_promoters.bed mm10 -size 4000 -hist 10 -d ../../getDifferentialPeaks/H3K4me3_UT_2_tag/ ../../getDifferentialPeaks/H3K4me3_4hIFNg_tag/)`, y = st_pu_me3$`../../getDifferentialPeaks/H3K4me3_4hIFNg_tag/ Coverage`, color = "H3K4me3_IFNg_tag/ Coverage")) +
  labs(
    x = "Distance from coBound STAT1-PU1 peaks (Promoter region)",
    y = "ChIP-Fragment Depth (per bp per Peak)",
    title = "H3K4me3 Distribution near coBound STAT1-PU1 peaks",
    color=""
  ) +
   scale_color_manual(values=c("blue", "red")) + theme(title = element_text(size = 14)) +
  theme_minimal()

plot_grid(d1, d2, nrow  = 2, scale = 0.85)
```

```{r echo=FALSE, eval=FALSE}
sessionInfo()
```

